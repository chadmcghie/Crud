name: Feature Branch Tests

on:
  push:
    branches: 
      - 'feature/**'
      - 'bugfix/**'
      - 'hotfix/**'
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '20.x'

jobs:
  # Quick feedback for developers working on feature branches
  quick-validation:
    name: Quick Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'src/Angular/package-lock.json'
        
    # Backend checks
    - name: Restore .NET dependencies
      run: dotnet restore solutions/Crud.sln
      
    - name: Build backend
      run: dotnet build solutions/Crud.sln --no-restore --configuration Release
      
    - name: Run backend unit tests only
      run: |
        echo "🧪 Running backend unit tests..."
        dotnet test test/Tests.Unit.Backend/Tests.Unit.Backend.csproj --no-build --configuration Release
      
    # Frontend checks
    - name: Install Angular dependencies
      working-directory: ./src/Angular
      run: npm ci
      
    - name: Run Angular lint
      working-directory: ./src/Angular
      run: npm run lint
      
    - name: Run Angular unit tests
      working-directory: ./src/Angular
      run: npm run test -- --watch=false --browsers=ChromeHeadless
      
    - name: Summary
      if: always()
      run: |
        echo "## 🏃 Feature Branch Quick Validation Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Progressive Testing Strategy**: Feature branch validation completed for commit ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### What was tested:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Backend build and unit tests" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Frontend linting and unit tests" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next steps:" >> $GITHUB_STEP_SUMMARY
        echo "- Create PR to \`dev\`: Full test suite (build + unit + integration)" >> $GITHUB_STEP_SUMMARY
        echo "- After merge to \`dev\`: E2E smoke tests run during staging deployment" >> $GITHUB_STEP_SUMMARY
        echo "- PR to \`main\`: E2E smoke tests + production safety checks" >> $GITHUB_STEP_SUMMARY