name: Pull Request Validation

on:
  pull_request:
    branches: [ main, dev ]
  push:
    branches: [ dev ]

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '20.x'

jobs:
  # Job 1: Build and Unit Tests
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'src/Angular/package-lock.json'
        
    - name: Restore .NET dependencies
      run: dotnet restore Crud.Angular.sln
      
    - name: Build solution
      run: dotnet build Crud.Angular.sln --no-restore --configuration Release
      
    - name: Install Angular dependencies
      working-directory: ./src/Angular
      run: npm ci
      
    - name: Build Angular
      working-directory: ./src/Angular
      run: npm run build
      
    - name: Run .NET Unit Tests
      run: dotnet test test/Tests.Unit.Backend/Tests.Unit.Backend.csproj --no-build --configuration Release --logger trx --results-directory TestResults/
      
    - name: Run Angular Unit Tests
      working-directory: ./src/Angular
      run: npm run test -- --watch=false --browsers=ChromeHeadless
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-results
        path: TestResults/
        
  # Job 2: Integration Tests
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore Crud.Angular.sln
      
    - name: Build solution
      run: dotnet build Crud.Angular.sln --no-restore --configuration Release
      
    - name: Run Backend Integration Tests
      run: dotnet test test/Tests.Integration.Backend/Tests.Integration.Backend.csproj --no-build --configuration Release --logger trx --results-directory TestResults/
      
    - name: Upload integration test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: integration-test-results
        path: TestResults/

  # Job 3: End-to-End Tests
  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'src/Angular/package-lock.json'
        
    - name: Restore .NET dependencies
      run: dotnet restore Crud.Angular.sln
      
    - name: Build solution
      run: dotnet build Crud.Angular.sln --no-restore --configuration Release
      
    - name: Install Angular dependencies
      working-directory: ./src/Angular
      run: npm ci
      
    - name: Build Angular for production
      working-directory: ./src/Angular
      run: npm run build
      
    - name: Install E2E test dependencies
      working-directory: ./test/Tests.E2E.NG
      run: npm ci
      
    - name: Install Playwright browsers
      working-directory: ./test/Tests.E2E.NG
      run: npx playwright install --with-deps chromium
      
    - name: Start API server
      working-directory: ./src/Api
      run: |
        dotnet run --configuration Release &
        echo "API_PID=$!" >> $GITHUB_ENV
      env:
        ASPNETCORE_ENVIRONMENT: E2E
        ASPNETCORE_URLS: http://localhost:5172
        
    - name: Wait for API to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:5172/health 2>/dev/null || curl -f http://localhost:5172 2>/dev/null; do sleep 2; done'
        
    - name: Start Angular server
      working-directory: ./src/Angular
      run: |
        npm start &
        echo "ANGULAR_PID=$!" >> $GITHUB_ENV
        
    - name: Wait for Angular to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:4200 2>/dev/null; do sleep 2; done'
        
    - name: Run API E2E Tests
      working-directory: ./test/Tests.E2E.NG
      run: npm run test:api-only
      env:
        CI: true
        
    - name: Run Full E2E Tests
      working-directory: ./test/Tests.E2E.NG
      run: npm run test:local
      env:
        CI: true
        
    - name: Upload E2E test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-test-results
        path: |
          test/Tests.E2E.NG/playwright-report/
          test/Tests.E2E.NG/test-results/
          
    - name: Stop servers
      if: always()
      run: |
        if [ ! -z "$API_PID" ]; then kill $API_PID || true; fi
        if [ ! -z "$ANGULAR_PID" ]; then kill $ANGULAR_PID || true; fi

  # Job 4: Test Summary
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, e2e-tests]
    if: always()
    
    steps:
    - name: Download all test results
      uses: actions/download-artifact@v4
      
    - name: Display test summary
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Test Type | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Unit Tests | ${{ needs.unit-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Integration Tests | ${{ needs.integration-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| E2E Tests | ${{ needs.e2e-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY